name: Build and Release Raylib Project (Linux Only)

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    # 1. Pobranie kodu źródłowego
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Instalacja zależności
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build build-essential libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev

    # 3. Konfiguracja projektu
    - name: Configure CMake
      run: |
        cmake -B build -G Ninja

    # 4. Kompilacja projektu
    - name: Build project
      run: |
        cmake --build build --config Release

    # 5. Pakowanie wyników w ZIP
    - name: Package the build
      run: |
        mkdir release
        cp build/untitled release/
        zip -j untitled-linux.zip release/untitled

    # 6. Przesłanie artefaktów jako ZIP
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: untitled-linux
        path: untitled-linux.zip

    # 7. Tworzenie lub aktualizacja draft release
    - name: Create or Update Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: nightly-build
        release_name: Nightly Build
        draft: true
        prerelease: true

    # 8. Dodanie ZIP do Release
    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: untitled-linux.zip
        asset_name: untitled-linux.zip
        asset_content_type: application/zip
